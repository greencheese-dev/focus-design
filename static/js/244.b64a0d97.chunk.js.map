{"version":3,"file":"static/js/244.b64a0d97.chunk.js","mappings":"wIACA,QAA0B,yBAA1B,EAA4D,wB,YCA5D,QAA4B,4BAA5B,EAA+D,uBAA/D,EAA4F,sBAA5F,EAA0H,wBAA1H,EAA0J,wBAA1J,EAA0L,wBAA1L,EAA6N,2BAA7N,EAAiQ,yBAAjQ,EAAoS,0BAApS,EAAwU,0BAAxU,EAA0W,wB,aCE1W,MAgFA,EAhFiBA,KACf,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,CAAEO,KAAM,GAAIC,KAAM,KAiBzD,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAC,gBAC7BH,EAAAA,EAAAA,MAAA,QAAMK,SAlBYC,IACpBA,EAAEC,iBACElB,EAAMmB,QAAUd,EAAQc,QAC1BC,QAAQC,IAAI,aAAc,CAAErB,QAAOK,YACnCG,EAAW,CAAEC,KAAM,8BAA+BC,KAAM,YACxDT,EAAS,IACTK,EAAW,KAEXE,EAAW,CACTC,KAAM,6CACNC,KAAM,SAEV,EAMgCE,UAAWC,EAAYC,SAAA,EACnDH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,QAAQV,UAAWC,EAAaC,SAAC,YAGhDC,EAAAA,EAAAA,KAAA,SACEL,KAAK,OACLa,GAAG,SACHC,MAAOrB,EACPsB,SAAWR,GAAMb,EAAUa,EAAES,OAAOF,OACpCZ,UAAWC,EACXc,YAAY,uGAGhBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,QAAQV,UAAWC,EAAaC,SAAC,WAGhDC,EAAAA,EAAAA,KAAA,SACEL,KAAK,OACLa,GAAG,QACHC,MAAOxB,EACPyB,SAAWR,GAAMhB,EAASgB,EAAES,OAAOF,OACnCZ,UAAWC,EACXc,YAAY,iEAGhBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,UAAUV,UAAWC,EAAaC,SAAC,aAGlDC,EAAAA,EAAAA,KAAA,YACEQ,GAAG,UACHC,MAAOnB,EACPoB,SAAWR,GAAMX,EAAWW,EAAES,OAAOF,OACrCZ,UAAWC,EACXc,YAAY,+GAGhBZ,EAAAA,EAAAA,KAAA,UAAQL,KAAK,SAASE,UAAWC,EAAcC,SAAC,0BAIjDP,EAAQE,OACPM,EAAAA,EAAAA,KAAA,OACEH,UAAS,GAAAgB,OAAKf,EAAc,KAAAe,OACT,YAAjBrB,EAAQG,KAAqBG,EAAiBA,GAC7CC,SAEFP,EAAQE,SAGT,EC9DV,EAbgBoB,KAEZlB,EAAAA,EAAAA,MAAA,OAAKC,UAAS,+BAAAgB,OAAiCf,GAAiBC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,MACEH,UAAS,mDAAAgB,OAAqDf,GAAgBC,SAC/E,cAGDC,EAAAA,EAAAA,KAAChB,EAAQ,M","sources":["webpack://focus-design/./src/routes/Contact.module.css?4b3b","webpack://focus-design/./src/components/Contact/Contacts.module.css?d2a9","components/Contact/Contacts.js","routes/Contact.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__J1MnH\",\"header\":\"Contact_header__iobBi\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__n+hYZ\",\"form\":\"Contacts_form__eep9Q\",\"row\":\"Contacts_row__kOMDG\",\"title\":\"Contacts_title__pxn4t\",\"label\":\"Contacts_label__kBJQz\",\"input\":\"Contacts_input__UfOIV\",\"textarea\":\"Contacts_textarea__SOOWi\",\"button\":\"Contacts_button__em8LS\",\"message\":\"Contacts_message__iNfY-\",\"success\":\"Contacts_success__bGTCU\",\"error\":\"Contacts_error__egbQc\"};","import React, { useState } from \"react\";\nimport styles from \"./Contacts.module.css\";\n\nconst Contacts = () => {\n  const [title, setTitle] = useState(\"\");\n  const [sender, setSender] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [message, setMessage] = useState({ text: \"\", type: \"\" });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title.trim() && content.trim()) {\n      console.log(\"Submitted:\", { title, content });\n      setMessage({ text: \"Your writing has been sent!\", type: \"success\" });\n      setTitle(\"\");\n      setContent(\"\");\n    } else {\n      setMessage({\n        text: \"Please fill in both the title and content.\",\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Contact Us</h1>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.row}>\n          <label htmlFor=\"title\" className={styles.label}>\n            Sender\n          </label>\n          <input\n            type=\"text\"\n            id=\"sender\"\n            value={sender}\n            onChange={(e) => setSender(e.target.value)}\n            className={styles.input}\n            placeholder=\"연락처 또는 이메일을 작성해주세요.\"\n          />\n        </div>\n        <div className={styles.row}>\n          <label htmlFor=\"title\" className={styles.label}>\n            Title\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            className={styles.input}\n            placeholder=\"제목을 작성해주세요.\"\n          />\n        </div>\n        <div className={styles.row}>\n          <label htmlFor=\"content\" className={styles.label}>\n            Content\n          </label>\n          <textarea\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            className={styles.textarea}\n            placeholder=\"여기에 문의하실 내용을 작성해주세요...\"\n          />\n        </div>\n        <button type=\"submit\" className={styles.button}>\n          보내기\n        </button>\n      </form>\n      {message.text && (\n        <div\n          className={`${styles.message} ${\n            message.type === \"success\" ? styles.success : styles.error\n          }`}\n        >\n          {message.text}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import styles from \"./Contact.module.css\";\n\nimport Contacts from \"../components/Contact/Contacts\";\n\nconst contact = () => {\n  return (\n    <div className={`flex flex-col content-start ${styles.wrapper}`}>\n      <h1\n        className={`border-t-2 border-b border-black text-left pb-2 ${styles.header}`}\n      >\n        contact.\n      </h1>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default contact;\n"],"names":["Contacts","title","setTitle","useState","sender","setSender","content","setContent","message","setMessage","text","type","_jsxs","className","styles","children","_jsx","onSubmit","e","preventDefault","trim","console","log","htmlFor","id","value","onChange","target","placeholder","concat","contact"],"sourceRoot":""}